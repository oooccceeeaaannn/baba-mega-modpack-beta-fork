---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 16021.
--- DateTime: 2024/7/24 19:27
---
function findclassunits()
    local result = {}
    local alreadydone = {}
    local checkrecursion = {}
    local related = {}

    local identifier = ""
    local fullid = {}

    if (featureindex["class"] ~= nil) then
        for i,v in ipairs(featureindex["class"]) do
            local rule = v[1]
            local conds = v[2]
            local ids = v[3]

            local name = rule[1]
            local subid = ""

            if (rule[2] == "is") and (name == "obj" or string.sub(name,1,4) == "obj_") then
                if (objectlist[name] ~= nil) and (alreadydone[name] == nil) then
                    local these = findall({name,{}})
                    alreadydone[name] = 1

                    if (#these > 0) then
                        for a,b in ipairs(these) do
                            local bunit = mmf.newObject(b)
                            local valid = true

                            if (featureindex["broken"] ~= nil) then
                                if (hasfeature(getname(bunit),"is","broken",b,bunit.values[XPOS],bunit.values[YPOS]) ~= nil) then
                                    valid = false
                                end
                            end

                            if valid then
                                table.insert(result, {b, conds})
                                subid = subid .. name
                                -- LISÄÄ TÄHÄN LISÄÄ DATAA
                            end
                        end
                    end
                end

                if (#subid > 0) then
                    for a,b in ipairs(conds) do
                        local condtype = b[1]
                        local params = b[2] or {}

                        subid = subid .. condtype

                        if (#params > 0) then
                            for c,d in ipairs(params) do
                                subid = subid .. tostring(d)

                                related = findunits(d,related,conds)
                            end
                        end
                    end
                end

                table.insert(fullid, subid)

                --MF_alert("Going through " .. name)

                if (#ids > 0) then else
                    MF_alert("No ids listed in Word-related rule! rules.lua line 1302 - this needs fixing asap (related to grouprules line 1118)")
                end
            end
        end

        table.sort(fullid)
        for i,v in ipairs(fullid) do
            -- MF_alert("Adding " .. v .. " to id")
            identifier = identifier .. v
        end

        --MF_alert("Identifier: " .. identifier)

    end

    --MF_alert("Current id (end): " .. identifier)

    return result,identifier,related
end

function checkclasschanges(unitid)
    if (#classunits > 0) then
        for i,v in ipairs(classunits) do
            if (v[1] == unitid) then
                updatecode = 1
                return
            end
        end
    end

    if (#classrelatedunits > 0) then
        for i,v in ipairs(classrelatedunits) do
            if (v[1] == unitid) then
                updatecode = 1
                return
            end
        end
    end
end
